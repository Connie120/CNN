// kernel_system_altera_mm_interconnect_181_sq2k2va.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1.2 277

`timescale 1 ps / 1 ps
module kernel_system_altera_mm_interconnect_181_sq2k2va (
		input  wire [29:0] kernel_cra_m0_address,                        //                          kernel_cra_m0.address
		output wire        kernel_cra_m0_waitrequest,                    //                                       .waitrequest
		input  wire [0:0]  kernel_cra_m0_burstcount,                     //                                       .burstcount
		input  wire [7:0]  kernel_cra_m0_byteenable,                     //                                       .byteenable
		input  wire        kernel_cra_m0_read,                           //                                       .read
		output wire [63:0] kernel_cra_m0_readdata,                       //                                       .readdata
		output wire        kernel_cra_m0_readdatavalid,                  //                                       .readdatavalid
		input  wire        kernel_cra_m0_write,                          //                                       .write
		input  wire [63:0] kernel_cra_m0_writedata,                      //                                       .writedata
		input  wire        kernel_cra_m0_debugaccess,                    //                                       .debugaccess
		output wire [5:0]  cnn_sys_cra_ring_root_avs_address,            //              cnn_sys_cra_ring_root_avs.address
		output wire        cnn_sys_cra_ring_root_avs_write,              //                                       .write
		output wire        cnn_sys_cra_ring_root_avs_read,               //                                       .read
		input  wire [63:0] cnn_sys_cra_ring_root_avs_readdata,           //                                       .readdata
		output wire [63:0] cnn_sys_cra_ring_root_avs_writedata,          //                                       .writedata
		output wire [7:0]  cnn_sys_cra_ring_root_avs_byteenable,         //                                       .byteenable
		input  wire        cnn_sys_cra_ring_root_avs_readdatavalid,      //                                       .readdatavalid
		input  wire        cnn_sys_cra_ring_root_avs_waitrequest,        //                                       .waitrequest
		input  wire        kernel_cra_reset_reset_bridge_in_reset_reset, // kernel_cra_reset_reset_bridge_in_reset.reset
		input  wire        clk_1x_out_clk_clk                            //                         clk_1x_out_clk.clk
	);

	wire         kernel_cra_m0_translator_avalon_universal_master_0_waitrequest;   // cnn_sys_cra_ring_root_avs_translator:uav_waitrequest -> kernel_cra_m0_translator:uav_waitrequest
	wire  [63:0] kernel_cra_m0_translator_avalon_universal_master_0_readdata;      // cnn_sys_cra_ring_root_avs_translator:uav_readdata -> kernel_cra_m0_translator:uav_readdata
	wire         kernel_cra_m0_translator_avalon_universal_master_0_debugaccess;   // kernel_cra_m0_translator:uav_debugaccess -> cnn_sys_cra_ring_root_avs_translator:uav_debugaccess
	wire  [29:0] kernel_cra_m0_translator_avalon_universal_master_0_address;       // kernel_cra_m0_translator:uav_address -> cnn_sys_cra_ring_root_avs_translator:uav_address
	wire         kernel_cra_m0_translator_avalon_universal_master_0_read;          // kernel_cra_m0_translator:uav_read -> cnn_sys_cra_ring_root_avs_translator:uav_read
	wire   [7:0] kernel_cra_m0_translator_avalon_universal_master_0_byteenable;    // kernel_cra_m0_translator:uav_byteenable -> cnn_sys_cra_ring_root_avs_translator:uav_byteenable
	wire         kernel_cra_m0_translator_avalon_universal_master_0_readdatavalid; // cnn_sys_cra_ring_root_avs_translator:uav_readdatavalid -> kernel_cra_m0_translator:uav_readdatavalid
	wire         kernel_cra_m0_translator_avalon_universal_master_0_lock;          // kernel_cra_m0_translator:uav_lock -> cnn_sys_cra_ring_root_avs_translator:uav_lock
	wire         kernel_cra_m0_translator_avalon_universal_master_0_write;         // kernel_cra_m0_translator:uav_write -> cnn_sys_cra_ring_root_avs_translator:uav_write
	wire  [63:0] kernel_cra_m0_translator_avalon_universal_master_0_writedata;     // kernel_cra_m0_translator:uav_writedata -> cnn_sys_cra_ring_root_avs_translator:uav_writedata
	wire   [3:0] kernel_cra_m0_translator_avalon_universal_master_0_burstcount;    // kernel_cra_m0_translator:uav_burstcount -> cnn_sys_cra_ring_root_avs_translator:uav_burstcount

	kernel_system_altera_merlin_master_translator_181_mhudjri #(
		.AV_ADDRESS_W                (30),
		.AV_DATA_W                   (64),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (8),
		.UAV_ADDRESS_W               (30),
		.UAV_BURSTCOUNT_W            (4),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (8),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0),
		.SYNC_RESET                  (0),
		.WAITREQUEST_ALLOWANCE       (0)
	) kernel_cra_m0_translator (
		.clk                    (clk_1x_out_clk_clk),                                               //   input,   width = 1,                       clk.clk
		.reset                  (kernel_cra_reset_reset_bridge_in_reset_reset),                     //   input,   width = 1,                     reset.reset
		.uav_address            (kernel_cra_m0_translator_avalon_universal_master_0_address),       //  output,  width = 30, avalon_universal_master_0.address
		.uav_burstcount         (kernel_cra_m0_translator_avalon_universal_master_0_burstcount),    //  output,   width = 4,                          .burstcount
		.uav_read               (kernel_cra_m0_translator_avalon_universal_master_0_read),          //  output,   width = 1,                          .read
		.uav_write              (kernel_cra_m0_translator_avalon_universal_master_0_write),         //  output,   width = 1,                          .write
		.uav_waitrequest        (kernel_cra_m0_translator_avalon_universal_master_0_waitrequest),   //   input,   width = 1,                          .waitrequest
		.uav_readdatavalid      (kernel_cra_m0_translator_avalon_universal_master_0_readdatavalid), //   input,   width = 1,                          .readdatavalid
		.uav_byteenable         (kernel_cra_m0_translator_avalon_universal_master_0_byteenable),    //  output,   width = 8,                          .byteenable
		.uav_readdata           (kernel_cra_m0_translator_avalon_universal_master_0_readdata),      //   input,  width = 64,                          .readdata
		.uav_writedata          (kernel_cra_m0_translator_avalon_universal_master_0_writedata),     //  output,  width = 64,                          .writedata
		.uav_lock               (kernel_cra_m0_translator_avalon_universal_master_0_lock),          //  output,   width = 1,                          .lock
		.uav_debugaccess        (kernel_cra_m0_translator_avalon_universal_master_0_debugaccess),   //  output,   width = 1,                          .debugaccess
		.av_address             (kernel_cra_m0_address),                                            //   input,  width = 30,      avalon_anti_master_0.address
		.av_waitrequest         (kernel_cra_m0_waitrequest),                                        //  output,   width = 1,                          .waitrequest
		.av_burstcount          (kernel_cra_m0_burstcount),                                         //   input,   width = 1,                          .burstcount
		.av_byteenable          (kernel_cra_m0_byteenable),                                         //   input,   width = 8,                          .byteenable
		.av_read                (kernel_cra_m0_read),                                               //   input,   width = 1,                          .read
		.av_readdata            (kernel_cra_m0_readdata),                                           //  output,  width = 64,                          .readdata
		.av_readdatavalid       (kernel_cra_m0_readdatavalid),                                      //  output,   width = 1,                          .readdatavalid
		.av_write               (kernel_cra_m0_write),                                              //   input,   width = 1,                          .write
		.av_writedata           (kernel_cra_m0_writedata),                                          //   input,  width = 64,                          .writedata
		.av_debugaccess         (kernel_cra_m0_debugaccess),                                        //   input,   width = 1,                          .debugaccess
		.av_beginbursttransfer  (1'b0),                                                             // (terminated),                                        
		.av_begintransfer       (1'b0),                                                             // (terminated),                                        
		.av_chipselect          (1'b0),                                                             // (terminated),                                        
		.av_lock                (1'b0),                                                             // (terminated),                                        
		.uav_clken              (),                                                                 // (terminated),                                        
		.av_clken               (1'b1),                                                             // (terminated),                                        
		.uav_response           (2'b00),                                                            // (terminated),                                        
		.av_response            (),                                                                 // (terminated),                                        
		.uav_writeresponsevalid (1'b0),                                                             // (terminated),                                        
		.av_writeresponsevalid  ()                                                                  // (terminated),                                        
	);

	kernel_system_altera_merlin_slave_translator_181_5aswt6a #(
		.AV_ADDRESS_W                   (6),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (30),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0),
		.WAITREQUEST_ALLOWANCE          (0),
		.SYNC_RESET                     (0)
	) cnn_sys_cra_ring_root_avs_translator (
		.clk                    (clk_1x_out_clk_clk),                                               //   input,   width = 1,                      clk.clk
		.reset                  (kernel_cra_reset_reset_bridge_in_reset_reset),                     //   input,   width = 1,                    reset.reset
		.uav_address            (kernel_cra_m0_translator_avalon_universal_master_0_address),       //   input,  width = 30, avalon_universal_slave_0.address
		.uav_burstcount         (kernel_cra_m0_translator_avalon_universal_master_0_burstcount),    //   input,   width = 4,                         .burstcount
		.uav_read               (kernel_cra_m0_translator_avalon_universal_master_0_read),          //   input,   width = 1,                         .read
		.uav_write              (kernel_cra_m0_translator_avalon_universal_master_0_write),         //   input,   width = 1,                         .write
		.uav_waitrequest        (kernel_cra_m0_translator_avalon_universal_master_0_waitrequest),   //  output,   width = 1,                         .waitrequest
		.uav_readdatavalid      (kernel_cra_m0_translator_avalon_universal_master_0_readdatavalid), //  output,   width = 1,                         .readdatavalid
		.uav_byteenable         (kernel_cra_m0_translator_avalon_universal_master_0_byteenable),    //   input,   width = 8,                         .byteenable
		.uav_readdata           (kernel_cra_m0_translator_avalon_universal_master_0_readdata),      //  output,  width = 64,                         .readdata
		.uav_writedata          (kernel_cra_m0_translator_avalon_universal_master_0_writedata),     //   input,  width = 64,                         .writedata
		.uav_lock               (kernel_cra_m0_translator_avalon_universal_master_0_lock),          //   input,   width = 1,                         .lock
		.uav_debugaccess        (kernel_cra_m0_translator_avalon_universal_master_0_debugaccess),   //   input,   width = 1,                         .debugaccess
		.av_address             (cnn_sys_cra_ring_root_avs_address),                                //  output,   width = 6,      avalon_anti_slave_0.address
		.av_write               (cnn_sys_cra_ring_root_avs_write),                                  //  output,   width = 1,                         .write
		.av_read                (cnn_sys_cra_ring_root_avs_read),                                   //  output,   width = 1,                         .read
		.av_readdata            (cnn_sys_cra_ring_root_avs_readdata),                               //   input,  width = 64,                         .readdata
		.av_writedata           (cnn_sys_cra_ring_root_avs_writedata),                              //  output,  width = 64,                         .writedata
		.av_byteenable          (cnn_sys_cra_ring_root_avs_byteenable),                             //  output,   width = 8,                         .byteenable
		.av_readdatavalid       (cnn_sys_cra_ring_root_avs_readdatavalid),                          //   input,   width = 1,                         .readdatavalid
		.av_waitrequest         (cnn_sys_cra_ring_root_avs_waitrequest),                            //   input,   width = 1,                         .waitrequest
		.av_begintransfer       (),                                                                 // (terminated),                                       
		.av_beginbursttransfer  (),                                                                 // (terminated),                                       
		.av_burstcount          (),                                                                 // (terminated),                                       
		.av_writebyteenable     (),                                                                 // (terminated),                                       
		.av_lock                (),                                                                 // (terminated),                                       
		.av_chipselect          (),                                                                 // (terminated),                                       
		.av_clken               (),                                                                 // (terminated),                                       
		.uav_clken              (1'b0),                                                             // (terminated),                                       
		.av_debugaccess         (),                                                                 // (terminated),                                       
		.av_outputenable        (),                                                                 // (terminated),                                       
		.uav_response           (),                                                                 // (terminated),                                       
		.av_response            (2'b00),                                                            // (terminated),                                       
		.uav_writeresponsevalid (),                                                                 // (terminated),                                       
		.av_writeresponsevalid  (1'b0)                                                              // (terminated),                                       
	);

endmodule
