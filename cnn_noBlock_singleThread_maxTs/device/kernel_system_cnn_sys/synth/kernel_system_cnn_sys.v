// kernel_system_cnn_sys.v

// Generated using ACDS version 18.1.2 277

`timescale 1 ps / 1 ps
module kernel_system_cnn_sys (
		input  wire         clock,                                       //                   clock_reset.clk
		input  wire         resetn,                                      //             clock_reset_reset.reset_n
		input  wire         clock2x,                                     //                 clock_reset2x.clk
		output wire         kernel_irq,                                  //                    kernel_irq.irq
		output wire [32:0]  avm_mem_gmem0_DDR_port_0_0_rw_address,       // avm_mem_gmem0_DDR_port_0_0_rw.address
		output wire [63:0]  avm_mem_gmem0_DDR_port_0_0_rw_byteenable,    //                              .byteenable
		input  wire         avm_mem_gmem0_DDR_port_0_0_rw_readdatavalid, //                              .readdatavalid
		output wire         avm_mem_gmem0_DDR_port_0_0_rw_read,          //                              .read
		input  wire [511:0] avm_mem_gmem0_DDR_port_0_0_rw_readdata,      //                              .readdata
		output wire         avm_mem_gmem0_DDR_port_0_0_rw_write,         //                              .write
		output wire [511:0] avm_mem_gmem0_DDR_port_0_0_rw_writedata,     //                              .writedata
		input  wire         avm_mem_gmem0_DDR_port_0_0_rw_waitrequest,   //                              .waitrequest
		output wire [4:0]   avm_mem_gmem0_DDR_port_0_0_rw_burstcount,    //                              .burstcount
		output wire [32:0]  avm_mem_gmem0_DDR_port_1_0_rw_address,       // avm_mem_gmem0_DDR_port_1_0_rw.address
		output wire [63:0]  avm_mem_gmem0_DDR_port_1_0_rw_byteenable,    //                              .byteenable
		input  wire         avm_mem_gmem0_DDR_port_1_0_rw_readdatavalid, //                              .readdatavalid
		output wire         avm_mem_gmem0_DDR_port_1_0_rw_read,          //                              .read
		input  wire [511:0] avm_mem_gmem0_DDR_port_1_0_rw_readdata,      //                              .readdata
		output wire         avm_mem_gmem0_DDR_port_1_0_rw_write,         //                              .write
		output wire [511:0] avm_mem_gmem0_DDR_port_1_0_rw_writedata,     //                              .writedata
		input  wire         avm_mem_gmem0_DDR_port_1_0_rw_waitrequest,   //                              .waitrequest
		output wire [4:0]   avm_mem_gmem0_DDR_port_1_0_rw_burstcount,    //                              .burstcount
		output wire [32:0]  avm_mem_gmem0_DDR_port_2_0_rw_address,       // avm_mem_gmem0_DDR_port_2_0_rw.address
		output wire [63:0]  avm_mem_gmem0_DDR_port_2_0_rw_byteenable,    //                              .byteenable
		input  wire         avm_mem_gmem0_DDR_port_2_0_rw_readdatavalid, //                              .readdatavalid
		output wire         avm_mem_gmem0_DDR_port_2_0_rw_read,          //                              .read
		input  wire [511:0] avm_mem_gmem0_DDR_port_2_0_rw_readdata,      //                              .readdata
		output wire         avm_mem_gmem0_DDR_port_2_0_rw_write,         //                              .write
		output wire [511:0] avm_mem_gmem0_DDR_port_2_0_rw_writedata,     //                              .writedata
		input  wire         avm_mem_gmem0_DDR_port_2_0_rw_waitrequest,   //                              .waitrequest
		output wire [4:0]   avm_mem_gmem0_DDR_port_2_0_rw_burstcount,    //                              .burstcount
		output wire [32:0]  avm_mem_gmem0_DDR_port_3_0_rw_address,       // avm_mem_gmem0_DDR_port_3_0_rw.address
		output wire [63:0]  avm_mem_gmem0_DDR_port_3_0_rw_byteenable,    //                              .byteenable
		input  wire         avm_mem_gmem0_DDR_port_3_0_rw_readdatavalid, //                              .readdatavalid
		output wire         avm_mem_gmem0_DDR_port_3_0_rw_read,          //                              .read
		input  wire [511:0] avm_mem_gmem0_DDR_port_3_0_rw_readdata,      //                              .readdata
		output wire         avm_mem_gmem0_DDR_port_3_0_rw_write,         //                              .write
		output wire [511:0] avm_mem_gmem0_DDR_port_3_0_rw_writedata,     //                              .writedata
		input  wire         avm_mem_gmem0_DDR_port_3_0_rw_waitrequest,   //                              .waitrequest
		output wire [4:0]   avm_mem_gmem0_DDR_port_3_0_rw_burstcount,    //                              .burstcount
		input  wire         cra_ring_root_avs_read,                      //             cra_ring_root_avs.read
		input  wire         cra_ring_root_avs_write,                     //                              .write
		input  wire [5:0]   cra_ring_root_avs_address,                   //                              .address
		input  wire [63:0]  cra_ring_root_avs_writedata,                 //                              .writedata
		input  wire [7:0]   cra_ring_root_avs_byteenable,                //                              .byteenable
		output wire [63:0]  cra_ring_root_avs_readdata,                  //                              .readdata
		output wire         cra_ring_root_avs_waitrequest,               //                              .waitrequest
		output wire         cra_ring_root_avs_readdatavalid              //                              .readdatavalid
	);

	cnn_sys cnn_sys (
		.clock                                       (clock),                                       //   input,    width = 1,                   clock_reset.clk
		.resetn                                      (resetn),                                      //   input,    width = 1,             clock_reset_reset.reset_n
		.clock2x                                     (clock2x),                                     //   input,    width = 1,                 clock_reset2x.clk
		.kernel_irq                                  (kernel_irq),                                  //  output,    width = 1,                    kernel_irq.irq
		.avm_mem_gmem0_DDR_port_0_0_rw_address       (avm_mem_gmem0_DDR_port_0_0_rw_address),       //  output,   width = 33, avm_mem_gmem0_DDR_port_0_0_rw.address
		.avm_mem_gmem0_DDR_port_0_0_rw_byteenable    (avm_mem_gmem0_DDR_port_0_0_rw_byteenable),    //  output,   width = 64,                              .byteenable
		.avm_mem_gmem0_DDR_port_0_0_rw_readdatavalid (avm_mem_gmem0_DDR_port_0_0_rw_readdatavalid), //   input,    width = 1,                              .readdatavalid
		.avm_mem_gmem0_DDR_port_0_0_rw_read          (avm_mem_gmem0_DDR_port_0_0_rw_read),          //  output,    width = 1,                              .read
		.avm_mem_gmem0_DDR_port_0_0_rw_readdata      (avm_mem_gmem0_DDR_port_0_0_rw_readdata),      //   input,  width = 512,                              .readdata
		.avm_mem_gmem0_DDR_port_0_0_rw_write         (avm_mem_gmem0_DDR_port_0_0_rw_write),         //  output,    width = 1,                              .write
		.avm_mem_gmem0_DDR_port_0_0_rw_writedata     (avm_mem_gmem0_DDR_port_0_0_rw_writedata),     //  output,  width = 512,                              .writedata
		.avm_mem_gmem0_DDR_port_0_0_rw_waitrequest   (avm_mem_gmem0_DDR_port_0_0_rw_waitrequest),   //   input,    width = 1,                              .waitrequest
		.avm_mem_gmem0_DDR_port_0_0_rw_burstcount    (avm_mem_gmem0_DDR_port_0_0_rw_burstcount),    //  output,    width = 5,                              .burstcount
		.avm_mem_gmem0_DDR_port_1_0_rw_address       (avm_mem_gmem0_DDR_port_1_0_rw_address),       //  output,   width = 33, avm_mem_gmem0_DDR_port_1_0_rw.address
		.avm_mem_gmem0_DDR_port_1_0_rw_byteenable    (avm_mem_gmem0_DDR_port_1_0_rw_byteenable),    //  output,   width = 64,                              .byteenable
		.avm_mem_gmem0_DDR_port_1_0_rw_readdatavalid (avm_mem_gmem0_DDR_port_1_0_rw_readdatavalid), //   input,    width = 1,                              .readdatavalid
		.avm_mem_gmem0_DDR_port_1_0_rw_read          (avm_mem_gmem0_DDR_port_1_0_rw_read),          //  output,    width = 1,                              .read
		.avm_mem_gmem0_DDR_port_1_0_rw_readdata      (avm_mem_gmem0_DDR_port_1_0_rw_readdata),      //   input,  width = 512,                              .readdata
		.avm_mem_gmem0_DDR_port_1_0_rw_write         (avm_mem_gmem0_DDR_port_1_0_rw_write),         //  output,    width = 1,                              .write
		.avm_mem_gmem0_DDR_port_1_0_rw_writedata     (avm_mem_gmem0_DDR_port_1_0_rw_writedata),     //  output,  width = 512,                              .writedata
		.avm_mem_gmem0_DDR_port_1_0_rw_waitrequest   (avm_mem_gmem0_DDR_port_1_0_rw_waitrequest),   //   input,    width = 1,                              .waitrequest
		.avm_mem_gmem0_DDR_port_1_0_rw_burstcount    (avm_mem_gmem0_DDR_port_1_0_rw_burstcount),    //  output,    width = 5,                              .burstcount
		.avm_mem_gmem0_DDR_port_2_0_rw_address       (avm_mem_gmem0_DDR_port_2_0_rw_address),       //  output,   width = 33, avm_mem_gmem0_DDR_port_2_0_rw.address
		.avm_mem_gmem0_DDR_port_2_0_rw_byteenable    (avm_mem_gmem0_DDR_port_2_0_rw_byteenable),    //  output,   width = 64,                              .byteenable
		.avm_mem_gmem0_DDR_port_2_0_rw_readdatavalid (avm_mem_gmem0_DDR_port_2_0_rw_readdatavalid), //   input,    width = 1,                              .readdatavalid
		.avm_mem_gmem0_DDR_port_2_0_rw_read          (avm_mem_gmem0_DDR_port_2_0_rw_read),          //  output,    width = 1,                              .read
		.avm_mem_gmem0_DDR_port_2_0_rw_readdata      (avm_mem_gmem0_DDR_port_2_0_rw_readdata),      //   input,  width = 512,                              .readdata
		.avm_mem_gmem0_DDR_port_2_0_rw_write         (avm_mem_gmem0_DDR_port_2_0_rw_write),         //  output,    width = 1,                              .write
		.avm_mem_gmem0_DDR_port_2_0_rw_writedata     (avm_mem_gmem0_DDR_port_2_0_rw_writedata),     //  output,  width = 512,                              .writedata
		.avm_mem_gmem0_DDR_port_2_0_rw_waitrequest   (avm_mem_gmem0_DDR_port_2_0_rw_waitrequest),   //   input,    width = 1,                              .waitrequest
		.avm_mem_gmem0_DDR_port_2_0_rw_burstcount    (avm_mem_gmem0_DDR_port_2_0_rw_burstcount),    //  output,    width = 5,                              .burstcount
		.avm_mem_gmem0_DDR_port_3_0_rw_address       (avm_mem_gmem0_DDR_port_3_0_rw_address),       //  output,   width = 33, avm_mem_gmem0_DDR_port_3_0_rw.address
		.avm_mem_gmem0_DDR_port_3_0_rw_byteenable    (avm_mem_gmem0_DDR_port_3_0_rw_byteenable),    //  output,   width = 64,                              .byteenable
		.avm_mem_gmem0_DDR_port_3_0_rw_readdatavalid (avm_mem_gmem0_DDR_port_3_0_rw_readdatavalid), //   input,    width = 1,                              .readdatavalid
		.avm_mem_gmem0_DDR_port_3_0_rw_read          (avm_mem_gmem0_DDR_port_3_0_rw_read),          //  output,    width = 1,                              .read
		.avm_mem_gmem0_DDR_port_3_0_rw_readdata      (avm_mem_gmem0_DDR_port_3_0_rw_readdata),      //   input,  width = 512,                              .readdata
		.avm_mem_gmem0_DDR_port_3_0_rw_write         (avm_mem_gmem0_DDR_port_3_0_rw_write),         //  output,    width = 1,                              .write
		.avm_mem_gmem0_DDR_port_3_0_rw_writedata     (avm_mem_gmem0_DDR_port_3_0_rw_writedata),     //  output,  width = 512,                              .writedata
		.avm_mem_gmem0_DDR_port_3_0_rw_waitrequest   (avm_mem_gmem0_DDR_port_3_0_rw_waitrequest),   //   input,    width = 1,                              .waitrequest
		.avm_mem_gmem0_DDR_port_3_0_rw_burstcount    (avm_mem_gmem0_DDR_port_3_0_rw_burstcount),    //  output,    width = 5,                              .burstcount
		.cra_ring_root_avs_read                      (cra_ring_root_avs_read),                      //   input,    width = 1,             cra_ring_root_avs.read
		.cra_ring_root_avs_write                     (cra_ring_root_avs_write),                     //   input,    width = 1,                              .write
		.cra_ring_root_avs_address                   (cra_ring_root_avs_address),                   //   input,    width = 6,                              .address
		.cra_ring_root_avs_writedata                 (cra_ring_root_avs_writedata),                 //   input,   width = 64,                              .writedata
		.cra_ring_root_avs_byteenable                (cra_ring_root_avs_byteenable),                //   input,    width = 8,                              .byteenable
		.cra_ring_root_avs_readdata                  (cra_ring_root_avs_readdata),                  //  output,   width = 64,                              .readdata
		.cra_ring_root_avs_waitrequest               (cra_ring_root_avs_waitrequest),               //  output,    width = 1,                              .waitrequest
		.cra_ring_root_avs_readdatavalid             (cra_ring_root_avs_readdatavalid)              //  output,    width = 1,                              .readdatavalid
	);

endmodule
